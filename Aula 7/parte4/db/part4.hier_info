|part4
clock => teste:memoria.clock
clock => HEX1[0]~reg0.CLK
clock => HEX1[1]~reg0.CLK
clock => HEX1[2]~reg0.CLK
clock => HEX1[3]~reg0.CLK
clock => HEX1[4]~reg0.CLK
clock => HEX1[5]~reg0.CLK
clock => HEX1[6]~reg0.CLK
clock => inputRAM[0].CLK
clock => inputRAM[1].CLK
clock => inputRAM[2].CLK
clock => inputRAM[3].CLK
clock => writeadr[0].CLK
clock => writeadr[1].CLK
clock => writeadr[2].CLK
clock => writeadr[3].CLK
clock => writeadr[4].CLK
clock => HEX2[0]~reg0.CLK
clock => HEX2[1]~reg0.CLK
clock => HEX2[2]~reg0.CLK
clock => HEX2[3]~reg0.CLK
clock => HEX2[4]~reg0.CLK
clock => HEX2[5]~reg0.CLK
clock => HEX2[6]~reg0.CLK
clock => HEX3[0]~reg0.CLK
clock => HEX3[1]~reg0.CLK
clock => HEX3[2]~reg0.CLK
clock => HEX3[3]~reg0.CLK
clock => HEX3[4]~reg0.CLK
clock => HEX3[5]~reg0.CLK
clock => HEX3[6]~reg0.CLK
clock => endereco[0].CLK
clock => endereco[1].CLK
clock => endereco[2].CLK
clock => endereco[3].CLK
clock => endereco[4].CLK
clock => HEX5[0]~reg0.CLK
clock => HEX5[1]~reg0.CLK
clock => HEX5[2]~reg0.CLK
clock => HEX5[3]~reg0.CLK
clock => HEX5[4]~reg0.CLK
clock => HEX5[5]~reg0.CLK
clock => HEX5[6]~reg0.CLK
clock => HEX4[0]~reg0.CLK
clock => HEX4[1]~reg0.CLK
clock => HEX4[2]~reg0.CLK
clock => HEX4[3]~reg0.CLK
clock => HEX4[4]~reg0.CLK
clock => HEX4[5]~reg0.CLK
clock => HEX4[6]~reg0.CLK
clock => HEX0[0]~reg0.CLK
clock => HEX0[1]~reg0.CLK
clock => HEX0[2]~reg0.CLK
clock => HEX0[3]~reg0.CLK
clock => HEX0[4]~reg0.CLK
clock => HEX0[5]~reg0.CLK
clock => HEX0[6]~reg0.CLK
clock => address_counter[0].CLK
clock => address_counter[1].CLK
clock => address_counter[2].CLK
clock => address_counter[3].CLK
clock => address_counter[4].CLK
clock => address_counter[5].CLK
clock => address_counter[6].CLK
clock => address_counter[7].CLK
clock => address_counter[8].CLK
clock => address_counter[9].CLK
clock => address_counter[10].CLK
clock => address_counter[11].CLK
clock => address_counter[12].CLK
clock => address_counter[13].CLK
clock => address_counter[14].CLK
clock => address_counter[15].CLK
clock => address_counter[16].CLK
clock => address_counter[17].CLK
clock => address_counter[18].CLK
clock => address_counter[19].CLK
clock => address_counter[20].CLK
clock => address_counter[21].CLK
clock => address_counter[22].CLK
clock => address_counter[23].CLK
clock => address_counter[24].CLK
clock => address_counter[25].CLK
clock => address_counter[26].CLK
clock => address_counter[27].CLK
clock => address_counter[28].CLK
clock => address_counter[29].CLK
clock => address_counter[30].CLK
clock => address_counter[31].CLK
clock => counter_1s[0].CLK
clock => counter_1s[1].CLK
clock => counter_1s[2].CLK
clock => counter_1s[3].CLK
clock => counter_1s[4].CLK
clock => counter_1s[5].CLK
clock => counter_1s[6].CLK
clock => counter_1s[7].CLK
clock => counter_1s[8].CLK
clock => counter_1s[9].CLK
clock => counter_1s[10].CLK
clock => counter_1s[11].CLK
clock => counter_1s[12].CLK
clock => counter_1s[13].CLK
clock => counter_1s[14].CLK
clock => counter_1s[15].CLK
clock => counter_1s[16].CLK
clock => counter_1s[17].CLK
clock => counter_1s[18].CLK
clock => counter_1s[19].CLK
clock => counter_1s[20].CLK
clock => counter_1s[21].CLK
clock => counter_1s[22].CLK
clock => counter_1s[23].CLK
clock => counter_1s[24].CLK
clock => counter_1s[25].CLK
clock => counter_1s[26].CLK
clock => counter_1s[27].CLK
clock => counter_1s[28].CLK
clock => counter_1s[29].CLK
clock => counter_1s[30].CLK
clock => counter_1s[31].CLK
wren => teste:memoria.wren
address[0] => ~NO_FANOUT~
address[1] => ~NO_FANOUT~
address[2] => ~NO_FANOUT~
address[3] => ~NO_FANOUT~
address[4] => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
q[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
HEX1[0] <= HEX1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= HEX1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= HEX1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= HEX1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= HEX1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= HEX1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= HEX1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[0] <= HEX2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= HEX2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= HEX2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= HEX2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= HEX2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= HEX2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= HEX2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[0] <= HEX3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[1] <= HEX3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[2] <= HEX3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[3] <= HEX3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[4] <= HEX3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[5] <= HEX3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX3[6] <= HEX3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[0] <= HEX4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[1] <= HEX4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[2] <= HEX4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[3] <= HEX4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[4] <= HEX4[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[5] <= HEX4[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX4[6] <= HEX4[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[0] <= HEX5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[1] <= HEX5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[2] <= HEX5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[3] <= HEX5[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[4] <= HEX5[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[5] <= HEX5[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX5[6] <= HEX5[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] <= HEX0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= HEX0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= HEX0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= HEX0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= HEX0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= HEX0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= HEX0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reset => HEX5[0]~reg0.ACLR
reset => HEX5[1]~reg0.ACLR
reset => HEX5[2]~reg0.ACLR
reset => HEX5[3]~reg0.ACLR
reset => HEX5[4]~reg0.ACLR
reset => HEX5[5]~reg0.ACLR
reset => HEX5[6]~reg0.PRESET
reset => HEX4[0]~reg0.ACLR
reset => HEX4[1]~reg0.ACLR
reset => HEX4[2]~reg0.ACLR
reset => HEX4[3]~reg0.ACLR
reset => HEX4[4]~reg0.ACLR
reset => HEX4[5]~reg0.ACLR
reset => HEX4[6]~reg0.PRESET
reset => HEX0[0]~reg0.ACLR
reset => HEX0[1]~reg0.ACLR
reset => HEX0[2]~reg0.ACLR
reset => HEX0[3]~reg0.ACLR
reset => HEX0[4]~reg0.ACLR
reset => HEX0[5]~reg0.ACLR
reset => HEX0[6]~reg0.PRESET
reset => address_counter[0].ACLR
reset => address_counter[1].ACLR
reset => address_counter[2].ACLR
reset => address_counter[3].ACLR
reset => address_counter[4].ACLR
reset => address_counter[5].ACLR
reset => address_counter[6].ACLR
reset => address_counter[7].ACLR
reset => address_counter[8].ACLR
reset => address_counter[9].ACLR
reset => address_counter[10].ACLR
reset => address_counter[11].ACLR
reset => address_counter[12].ACLR
reset => address_counter[13].ACLR
reset => address_counter[14].ACLR
reset => address_counter[15].ACLR
reset => address_counter[16].ACLR
reset => address_counter[17].ACLR
reset => address_counter[18].ACLR
reset => address_counter[19].ACLR
reset => address_counter[20].ACLR
reset => address_counter[21].ACLR
reset => address_counter[22].ACLR
reset => address_counter[23].ACLR
reset => address_counter[24].ACLR
reset => address_counter[25].ACLR
reset => address_counter[26].ACLR
reset => address_counter[27].ACLR
reset => address_counter[28].ACLR
reset => address_counter[29].ACLR
reset => address_counter[30].ACLR
reset => address_counter[31].ACLR
reset => counter_1s[0].ACLR
reset => counter_1s[1].ACLR
reset => counter_1s[2].ACLR
reset => counter_1s[3].ACLR
reset => counter_1s[4].ACLR
reset => counter_1s[5].ACLR
reset => counter_1s[6].ACLR
reset => counter_1s[7].ACLR
reset => counter_1s[8].ACLR
reset => counter_1s[9].ACLR
reset => counter_1s[10].ACLR
reset => counter_1s[11].ACLR
reset => counter_1s[12].ACLR
reset => counter_1s[13].ACLR
reset => counter_1s[14].ACLR
reset => counter_1s[15].ACLR
reset => counter_1s[16].ACLR
reset => counter_1s[17].ACLR
reset => counter_1s[18].ACLR
reset => counter_1s[19].ACLR
reset => counter_1s[20].ACLR
reset => counter_1s[21].ACLR
reset => counter_1s[22].ACLR
reset => counter_1s[23].ACLR
reset => counter_1s[24].ACLR
reset => counter_1s[25].ACLR
reset => counter_1s[26].ACLR
reset => counter_1s[27].ACLR
reset => counter_1s[28].ACLR
reset => counter_1s[29].ACLR
reset => counter_1s[30].ACLR
reset => counter_1s[31].ACLR
reset => HEX1[0]~reg0.ENA
reset => endereco[4].ENA
reset => endereco[3].ENA
reset => endereco[2].ENA
reset => endereco[1].ENA
reset => endereco[0].ENA
reset => HEX3[6]~reg0.ENA
reset => HEX3[5]~reg0.ENA
reset => HEX3[4]~reg0.ENA
reset => HEX3[3]~reg0.ENA
reset => HEX3[2]~reg0.ENA
reset => HEX3[1]~reg0.ENA
reset => HEX3[0]~reg0.ENA
reset => HEX2[6]~reg0.ENA
reset => HEX2[5]~reg0.ENA
reset => HEX2[4]~reg0.ENA
reset => HEX2[3]~reg0.ENA
reset => HEX2[2]~reg0.ENA
reset => HEX2[1]~reg0.ENA
reset => HEX2[0]~reg0.ENA
reset => writeadr[4].ENA
reset => writeadr[3].ENA
reset => writeadr[2].ENA
reset => writeadr[1].ENA
reset => writeadr[0].ENA
reset => inputRAM[3].ENA
reset => inputRAM[2].ENA
reset => inputRAM[1].ENA
reset => inputRAM[0].ENA
reset => HEX1[6]~reg0.ENA
reset => HEX1[5]~reg0.ENA
reset => HEX1[4]~reg0.ENA
reset => HEX1[3]~reg0.ENA
reset => HEX1[2]~reg0.ENA
reset => HEX1[1]~reg0.ENA
SW[0] => inputRAM.DATAB
SW[1] => inputRAM.DATAB
SW[2] => inputRAM.DATAB
SW[3] => inputRAM.DATAB
SW[4] => writeadr.DATAB
SW[5] => writeadr.DATAB
SW[6] => writeadr.DATAB
SW[7] => writeadr.DATAB
SW[8] => writeadr.DATAB


|part4|teste:memoria
clock => altsyncram:altsyncram_component.clock0
data[0] => altsyncram:altsyncram_component.data_a[0]
data[1] => altsyncram:altsyncram_component.data_a[1]
data[2] => altsyncram:altsyncram_component.data_a[2]
data[3] => altsyncram:altsyncram_component.data_a[3]
rdaddress[0] => altsyncram:altsyncram_component.address_b[0]
rdaddress[1] => altsyncram:altsyncram_component.address_b[1]
rdaddress[2] => altsyncram:altsyncram_component.address_b[2]
rdaddress[3] => altsyncram:altsyncram_component.address_b[3]
rdaddress[4] => altsyncram:altsyncram_component.address_b[4]
wraddress[0] => altsyncram:altsyncram_component.address_a[0]
wraddress[1] => altsyncram:altsyncram_component.address_a[1]
wraddress[2] => altsyncram:altsyncram_component.address_a[2]
wraddress[3] => altsyncram:altsyncram_component.address_a[3]
wraddress[4] => altsyncram:altsyncram_component.address_a[4]
wren => altsyncram:altsyncram_component.wren_a
q[0] <= altsyncram:altsyncram_component.q_b[0]
q[1] <= altsyncram:altsyncram_component.q_b[1]
q[2] <= altsyncram:altsyncram_component.q_b[2]
q[3] <= altsyncram:altsyncram_component.q_b[3]


|part4|teste:memoria|altsyncram:altsyncram_component
wren_a => altsyncram_9i04:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_9i04:auto_generated.data_a[0]
data_a[1] => altsyncram_9i04:auto_generated.data_a[1]
data_a[2] => altsyncram_9i04:auto_generated.data_a[2]
data_a[3] => altsyncram_9i04:auto_generated.data_a[3]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
data_b[3] => ~NO_FANOUT~
address_a[0] => altsyncram_9i04:auto_generated.address_a[0]
address_a[1] => altsyncram_9i04:auto_generated.address_a[1]
address_a[2] => altsyncram_9i04:auto_generated.address_a[2]
address_a[3] => altsyncram_9i04:auto_generated.address_a[3]
address_a[4] => altsyncram_9i04:auto_generated.address_a[4]
address_b[0] => altsyncram_9i04:auto_generated.address_b[0]
address_b[1] => altsyncram_9i04:auto_generated.address_b[1]
address_b[2] => altsyncram_9i04:auto_generated.address_b[2]
address_b[3] => altsyncram_9i04:auto_generated.address_b[3]
address_b[4] => altsyncram_9i04:auto_generated.address_b[4]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_9i04:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_a[3] <= <GND>
q_b[0] <= altsyncram_9i04:auto_generated.q_b[0]
q_b[1] <= altsyncram_9i04:auto_generated.q_b[1]
q_b[2] <= altsyncram_9i04:auto_generated.q_b[2]
q_b[3] <= altsyncram_9i04:auto_generated.q_b[3]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|part4|teste:memoria|altsyncram:altsyncram_component|altsyncram_9i04:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a0.CLK1
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a1.CLK1
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a2.CLK1
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a3.CLK1
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
q_b[0] <= ram_block1a0.PORTBDATAOUT
q_b[1] <= ram_block1a1.PORTBDATAOUT
q_b[2] <= ram_block1a2.PORTBDATAOUT
q_b[3] <= ram_block1a3.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a0.ENA0
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a1.ENA0
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a2.ENA0
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a3.ENA0


